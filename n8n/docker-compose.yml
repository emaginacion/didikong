version: "3.8"

services:
  n8n:
    image: n8nio/n8n
    ports:
      - "5678:5678"
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=n8n
    volumes:
      - n8n_data:/home/node/.n8n
    depends_on:
      postgres:
        condition: service_healthy
    extra_hosts:
      - "host.docker.internal:host-gateway"
 
  postgres:
  image: postgres:13
  environment:
    - POSTGRES_USER=n8n
    - POSTGRES_PASSWORD=n8n
    - POSTGRES_DB=n8n
  volumes:
    - ./postgres_data:/var/lib/postgresql/data
  command:
    - "postgres"
    - "-c"
    - "max_connections=1000"
    - "-c"
    - "shared_preload_libraries=pg_stat_statements"
  healthcheck:
    test: ["CMD-SHELL", "pg_isready -U n8n -d n8n"]
    interval: 5s
    timeout: 5s
    retries: 5

  supabase-studio:
    image: supabase/studio:latest
    ports:
      - "3000:3000"
    environment:
      STUDIO_PG_META_URL: http://meta:8080
      POSTGRES_PASSWORD: n8n
    depends_on:
      postgres:
        condition: service_healthy

  kong:
    image: kong:2.8.1
    ports:
      - "8000:8000/tcp"
      - "8443:8443/tcp"
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /var/lib/kong/kong.yml
    volumes:
      - ./kong.yml:/var/lib/kong/kong.yml
    depends_on:
      postgres:
        condition: service_healthy

  auth:
    image: supabase/gotrue:v2.82.4
    environment:
      GOTRUE_API_HOST: 0.0.0.0
      GOTRUE_API_PORT: 9999
      API_EXTERNAL_URL: http://localhost:8000
      DATABASE_URL: postgres://n8n:n8n@postgres:5432/n8n?sslmode=disable
    depends_on:
      postgres:
        condition: service_healthy

  rest:
    image: postgrest/postgrest:v10.1.2
    environment:
      PGRST_DB_URI: postgres://n8n:n8n@postgres:5432/n8n
      PGRST_DB_SCHEMA: public
      PGRST_DB_ANON_ROLE: anon
      PGRST_JWT_SECRET: your-super-secret-jwt-token-with-at-least-32-characters-long
    depends_on:
      postgres:
        condition: service_healthy

  meta:
    image: supabase/postgres-meta:v0.68.0
    environment:
      PG_META_PORT: 8080
      PG_META_DB_HOST: postgres
      PG_META_DB_PASSWORD: n8n
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  n8n_data:
  postgres_data: